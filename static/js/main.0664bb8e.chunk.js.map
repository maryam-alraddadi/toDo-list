{"version":3,"sources":["components/Header.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["today","Date","Header","toLocaleString","weekday","dayNumber","getUTCDay","month","className","this","getCurrentDay","getCurrentDayNumber","getCurrentMonth","props","todosCount","Component","TodoItem","type","onChange","check","index","checked","item","isChecked","content","onClick","remove","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","TodoList","items","map","App","state","todoItems","inputValue","handleInputChange","bind","handleInputSubmit","removeItem","checkItem","event","setState","target","value","preventDefault","splice","storedItems","JSON","parse","localStorage","getItem","setItem","stringify","length","onSubmit","placeholder","fillRule","clipRule","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0664bb8e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nvar today = new Date();\n\nexport default class Header extends Component {\n  getCurrentDay() {\n    return today.toLocaleString(\"en-us\", { weekday: \"long\" }) + \", \";\n  }\n\n  getCurrentDayNumber() {\n    let dayNumber = today.getUTCDay();\n    let selector;\n    if (dayNumber <= 0) {\n      selector = 4;\n    } else if ((dayNumber > 3 && dayNumber < 21) || dayNumber % 10 > 3) {\n      selector = 0;\n    } else {\n      selector = dayNumber % 10;\n    }\n    return dayNumber + [\"th\", \"st\", \"nd\", \"rd\", \"\"][selector];\n  }\n\n  getCurrentMonth() {\n    return today.toLocaleString(\"default\", { month: \"long\" });\n  }\n\n  render() {\n    return (\n      <div className=\"max-w-2xl h-24 mx-auto px-8 py-6 rounded-t bg-gray-50\">\n        <div className=\"flex\">\n          <div className=\"flex-1\">\n            <p className=\"text-xl font-semibold inline text-violet-500\">\n              {this.getCurrentDay()}\n            </p>\n            <p className=\"text-xl  font-normal inline text-violet-500\">\n              {this.getCurrentDayNumber()}\n            </p>\n            <h4 className=\" font-light text-gray-400\">\n              {this.getCurrentMonth()}\n            </h4>\n          </div>\n          <span className=\"flex-1 text-right font-medium leading-10 pt-1 text-gray-500\">\n            {this.props.todosCount} <span className=\"font-light\"> todos</span>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport default class TodoItem extends Component {\n  render() {\n    return (\n      <div className=\"border-b border-gray-200 py-4 px-8\">\n        <div className=\"relative hover-trigger\">\n          <label className=\"inline-flex items-center mt-3 \">\n            <input\n              type=\"checkbox\"\n              className=\"form-checkbox h-5 w-5 text-red-600 bg-red-300\"\n              onChange={() => this.props.check(this.props.index)}\n              checked={this.props.item.isChecked}\n            />\n            <span\n              className={`ml-6 ${\n                this.props.item.isChecked\n                  ? \"line-through text-gray-400\"\n                  : \"text-gray-500\"\n              }`}\n            >\n              {this.props.item.content}\n            </span>\n          </label>\n          <button\n            className=\"absolute bg-white px-2 py-2 bottom-0 right-0 hover-target rounded focus:outline-none focus:ring-2 focus:ring-gray-200\"\n            onClick={() => this.props.remove(this.props.index)}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\" text-gray-500 h-5 w-5 hover:text-red-400\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport TodoItem from \"./TodoItem\";\nexport default class TodoList extends Component {\n  render() {\n    return (\n      <div className=\"overflow-auto h-full\">\n        {this.props.items.map((item, index) => {\n          return (\n            <TodoItem\n              key={index}\n              index={index}\n              item={item}\n              remove={this.props.remove}\n              check={this.props.check}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport TodoList from \"./components/TodoList\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { todoItems: [], inputValue: \"\" };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleInputSubmit = this.handleInputSubmit.bind(this);\n    this.removeItem = this.removeItem.bind(this);\n    this.checkItem = this.checkItem.bind(this);\n  }\n\n  handleInputChange(event) {\n    this.setState({ inputValue: event.target.value });\n  }\n\n  handleInputSubmit(event) {\n    this.setState({\n      todoItems: [\n        ...this.state.todoItems,\n        { content: this.state.inputValue, isChecked: false },\n      ],\n    });\n    this.setState({ inputValue: \"\" });\n    event.preventDefault();\n  }\n\n  removeItem(index) {\n    var items = [...this.state.todoItems];\n    items.splice(index, 1);\n    this.setState({\n      todoItems: items,\n    });\n  }\n\n  checkItem(index) {\n    var items = [...this.state.todoItems];\n    items[index].isChecked = !items[index].isChecked;\n    this.setState({ todoItems: items });\n  }\n\n  componentDidMount() {\n    var storedItems = JSON.parse(localStorage.getItem(\"TodoList\"));\n    if (storedItems) {\n      this.setState({ todoItems: storedItems });\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(\"TodoList\", JSON.stringify(this.state.todoItems));\n  }\n\n  render() {\n    return (\n      <div className=\"flex items-center min-h-screen bg-gradient-to-r from-purple-400 via-pink-500 to-red-500\">\n        <button\n          className=\"absolute top-6 right-8 bg-transparent text-white opacity-50 font-light py-2 px-4 border rounded-md border-grey hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-gray-200\"\n          onClick={() => this.setState({ todoItems: [] })}\n        >\n          Clear all\n        </button>\n        <div className=\"container max-w-2xl mx-auto border  border-gray-300 rounded-lg\">\n          <Header todosCount={this.state.todoItems.length} />\n          <div className=\"max-w-2xl h-96 mx-auto bg-white\">\n            <TodoList\n              items={this.state.todoItems}\n              remove={this.removeItem}\n              check={this.checkItem}\n            ></TodoList>\n          </div>\n          <div className=\"max-w-2xl h-24 mx-auto rounded-b bg-gray-100\">\n            <form onSubmit={this.handleInputSubmit}>\n              <div className=\"flex items-center mx-auto px-8 pt-6\">\n                <input\n                  type=\"text\"\n                  value={this.state.inputValue}\n                  onChange={this.handleInputChange}\n                  placeholder=\"add new todo\"\n                  className=\"flex-1 appearance-none rounded shadow p-3 text-grey-dark mr-2 focus:outline-none\"\n                />\n                <button\n                  type=\"submit\"\n                  className=\"inline-block ml-2 p-3 text-center text-white  bg-orange-500 rounded-full shadow hover:shadow-lg focus:outline-none\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    className=\"h-6 w-6\"\n                    viewBox=\"0 0 20 20\"\n                    fill=\"currentColor\"\n                  >\n                    <path\n                      fillRule=\"evenodd\"\n                      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n                      clipRule=\"evenodd\"\n                    />\n                  </svg>\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}